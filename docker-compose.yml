version: '2'
networks:
    micronet:

services:
    ## Consul
    consul-bootstrap:
      image          : consul
      container_name : consul-bootstrap
      command        :
        - "agent"
        - "-server"
        - "-bootstrap"
        - "-ui"
        - "-data-dir=/tmp"
        - "-advertise=${DOCKER_MACHINE_IP}"
        - "-client=0.0.0.0"
        - "-node=bootstrap-node"
        - "-node-id=102b597f-0b4c-4702-985e-327a5a022cc7"
      volumes        : [ "./tmp/consul-bootstrap:/tmp/consul" ]
      networks       : [ micronet ]
      ports          :
        - "8400:8400"
        - "8500:8500"
        - "8600:8600/udp"


    # consul-server-1:
    #   image          : consul
    #   container_name : consul-server-1
    #   command        :
    #     - "agent"
    #     - "-server"
    #     - "-client=0.0.0.0"
    #     - "-node=server-node-1"
    #     - "-node-id=3d6ae904-21bc-4322-adde-6ff1ac22a68a" # uuidgen | uuidgen | awk '{print tolower(zsh)}'
    #     - "-join=consul-bootstrap"
    #   volumes        : [ "./tmp/consul-server-1:/tmp/consul" ]
    #   networks       : [ micronet ]
    #   links          : [ consul-bootstrap ]
  
    # Registrator
    registrator:
      image         : gliderlabs/registrator
      container_name: registrator
      command       : ["-ip", "${DOCKER_MACHINE_IP}", "consul://consul-bootstrap:8500"]
      volumes       : [ "/var/run/docker.sock:/tmp/docker.sock" ]
      networks      : [ micronet ]
      depends_on    : [ consul-bootstrap ]
  
    # Flask services
    flask-server-1:
      build         : .
      container_name: flask-server-1
      working_dir   : /usr/local/app/consul-docker-test
      entrypoint    : ""
      command       : [ "python", "-m", "flask-server.server" ]
      networks      : [ micronet ]
      links         : [ consul-bootstrap ]
      ports:
        - "80:80"
      depends_on    : [ registrator ]
    
    # flask-server-2:
    #   build         : .
    #   container_name: flask-server-2
    #   working_dir   : /usr/local/app/consul-docker-test
    #   entrypoint    : ""
    #   command       : [ "python", "-m", "flask-server.server" ]
    #   networks      : [ micronet ]
    #   links         : [ consul-server-1 ]
    #   environment   :
    #     - CONSUL_AGENT_ADDR=consul-server-1
    #     - CONSUL_AGENT_PORT=8500
    #     - CONSUL_SERVICE_NAME=flask-server-2

    # consul-members:
    #   restart        : always
    #   image          : consul
    #   container_name : consul-members
    #   command        : [ "members", "-http-addr=consul-bootstrap:8500"]
    #   networks       : [ micronet ]
    #   depends_on     : [ consul-bootstrap ]
    #   links          : [ consul-bootstrap ]