version: '2'
networks:
    micronet:

services:
    consul-bootstrap:
      image          : consul
      container_name : consul-bootstrap
      command        :
        - "agent"
        - "-server"
        - "-bootstrap-expect=1"
        - "-data-dir=/tmp/consul"
        - "-ui"
        - "-client=0.0.0.0"
        - "-node=bootstrap-node"
        - "-node-id=102b597f-0b4c-4702-985e-327a5a022cc7"
      volumes        : [ "./tmp/consul-bootstrap:/tmp/consul" ]
      networks       : [ micronet ]
      ports          :
        - "8400:8400"
        - "8500:8500"
        - "8600:8600/udp"


    consul-server-1:
      image          : consul
      container_name : consul-server-1
      command        :
        - "agent"
        - "-server"
        - "-bootstrap"
        - "-data-dir=/tmp/consul"
        - "-client=0.0.0.0"
        - "-node=server-node-1"
        - "-node-id=3d6ae904-21bc-4322-adde-6ff1ac22a68a" # uuidgen | uuidgen | awk '{print tolower(zsh)}'
        - "-join=consul-bootstrap"
      volumes        : [ "./tmp/consul-server-1:/tmp/consul" ]
      networks       : [ micronet ]
      links          : [ consul-bootstrap ]

  
    flask-server:
      build         : .
      container_name: flask-server
      working_dir   : /usr/local/app/consul-docker-test
      entrypoint    : ""
      command       : [ "python", "-m", "flask_server.server" ]
      networks      : [ micronet ]
      links         : [ consul-bootstrap ]

    # consul-members:
    #   restart        : always
    #   image          : consul
    #   container_name : consul-members
    #   command        : [ "members", "-http-addr=consul-bootstrap:8500"]
    #   networks       : [ micronet ]
    #   depends_on     : [ consul-bootstrap ]
    #   links          : [ consul-bootstrap ]